@model IEnumerable<TimeKeeping.Models.PersonnelApplyTimeOffPolicy>

@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" type="text/css" href="~/css/PersonnelApplyTimeOffPolicieIndex.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">

<img id="logo" src="~/icon/Logo.png" alt="Infodation">
<h1 class="text-center">
    Overview Timeoff Policy
    <a id="apply" asp-action="Create" class="btn bt">Apply Timeoff Policy</a>
    <a id="update" asp-action="UpdateDayPolicy" class="btn bt">Update (is developing)</a>
</h1>
<div id="loader"></div>
<div id="body">
    <div class="form-group">
        <i class="fas fa-search icon" style="font-size:26px; "></i>
        <!--This is for "not found"" when model.count = 0, it mean not any data. Different if else is onkeyup="quickSearch()" -->
        @{
            if (Model.Count() == 0)
            {
                <input type="text" id="quickSearch" placeholder="Search for name.." title="Type in a name" class="form-control  mr-2">
            }
            else
            {
                <input type="text" id="quickSearch" onkeyup="quickSearch()" placeholder="Search for name.." title="Type in a name" class="form-control  mr-2">
            }
        }
    </div>
    <div class="table-responsive" id="conTent">
        <table class="table table-bordered table-hover table-striped">
            <thead>
                <tr>
                    <th class="align-middle">
                        <div style="width:150px;">
                            @Html.DisplayNameFor(model => model.Personnel)
                        </div>
                    </th>
                    <th class="align-middle">
                        <div style="width:200px;">
                            @Html.DisplayNameFor(model => model.TimeOffPolicy)
                        </div>
                    </th>
                    <th class="align-middle">
                        <div style="width:200px;">
                            @Html.DisplayNameFor(model => model.EffectiveDate)
                        </div>
                    </th>
                    <th class="align-middle">
                        <div style="width:200px;">
                            @Html.DisplayNameFor(model => model.NumberOfDaysOffLastYear)
                        </div>
                    </th>
                    <th class="align-middle">
                        <div style="width:200px;">
                            @Html.DisplayNameFor(model => model.NumberOfDaysOffStandard)
                        </div>
                    </th>
                    <th class="align-middle">
                        <div style="width:200px;">
                            @Html.DisplayNameFor(model => model.NumberOfDaysOffSeniority)
                        </div>
                    </th>
                    <th class="align-middle">
                        <div style="width:200px;">
                            @Html.DisplayNameFor(model => model.NumberOfDaysOffOffset)
                        </div>
                    </th>
                    <th class="align-middle">
                        <div style="width:150px;">
                            Total
                        </div>
                    </th>
                    <th class="align-middle">
                        <div style="width: 200px;" class="container"> @Html.DisplayNameFor(model => model.Note) </div>
                    </th>
                    <th colspan="2" class="align-middle">
                        <div style="width:200px;">
                            Action
                        </div>
                    </th>
                </tr>
            </thead>
            @{
                if (Model.Count() == 0)
                {
                    <tr>
                        <td colspan="10"><strong>Not found</strong></td>
                    </tr>
                }
                else
                {
                    <tr style="display:none">
                        <td colspan="10"><strong>Not found</strong></td>
                    </tr>
                }
            }
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.Personnel.LastName)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.TimeOffPolicy.TimeOffPolicyName)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.EffectiveDate)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.NumberOfDaysOffLastYear)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.NumberOfDaysOffStandard)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.NumberOfDaysOffSeniority)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.NumberOfDaysOffOffset)
                        </td>
                        @{
                            var total = item.NumberOfDaysOffLastYear + item.NumberOfDaysOffStandard + item.NumberOfDaysOffSeniority + item.NumberOfDaysOffOffset;
                            <td class="align-middle">
                                @total
                            </td>
                        }
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.Note)
                        </td>

                        <td class="align-middle">
                            @Html.ActionLink("Edit", "Edit", new { personnalId=item.PersonnelId,policyId=item.TimeOffPolicyId}, new {@class="btn bt"}  )
                        </td>
                        <td class="align-middle">
                            <form asp-controller="PersonnelApplyTimeOffPolicies" asp-action="Delete">
                                <input type="text" hidden name="PersonnelId" asp-for="@item.PersonnelId" />
                                <input type="text" hidden name="TimeOffPolicyId" asp-for="@item.TimeOffPolicyId" />
                                <input type="submit" value="Delete" class="btn bt" onclick="loading(event)" />
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!--loading and comfirm alert-->
<script>
    var myVar;
    function loading(e) {
      if(confirm("Are you sure?"))
      {
      document.getElementById("loader").style.display = "block";
      document.getElementById("body").hidden = true;
      myVar = setTimeout(showContent, 1000);
      }
      else
      {
          e.preventDefault();
      }
    }
    function showContent() {
      document.getElementById("loader").style.display = "none";
      document.getElementById("body").hidden = false;
    }

    function quickSearch() {
      var input, filter, table, tr, td, i, txtValue, count;
      count = 0;
      input = document.getElementById("quickSearch");
      filter = input.value.toUpperCase();
      table = document.getElementById("conTent");
      tr = table.getElementsByTagName("tr");
      for (i = 2; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[0];
        if (td) {
          txtValue = td.textContent || td.innerText;
          if (txtValue.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
            count = count + 1;
          } else {
            tr[i].style.display = "none";
          }
        }
      }
      if(count>0)
      {
      tr[1].style.display = "none";
      } else {
           tr[1].style.display = "";
      }
    }
</script>