@{
    ViewData["Title"] = "Overview Time Sheet";
}

<div class="banner"></div>

<div id="time-sheet-overview" class="my-3">
    <div class="time-sheet-container row mx-0 justify-content-between">
        <div class="col-3 p-0 px-2 pb-4">
            <input type="text" name="key-work" id="quick-filter" class="form-control mb-0" placeholder="Quick filter" style="height:3rem;" />
            <div id="employees-container">
                
            </div>
        </div>

        <div class="col-9" id="time-info-container" style="overflow-x: scroll; font-size:0.8rem;">
            <div class="d-flex" id="day-of-week"></div>
        </div>
        
    </div>
</div>

@* template timesheet title *@
<template id="time-sheet-date-title">
    <div style="min-width: 5rem; max-height:3rem;" class="p-1 card mr-1 bg-light">
        <p class="time-sheet-date font-weight-bold text-primary text-center mb-0"></p>
        <p class="text-center date-name mb-0 text-muted"></p>
    </div>
</template>


@* template employee *@
<template id="employee-item">
    <div class="row border border-secondary mx-0 px-1 mt-1 card bg-white" style="max-height:3rem; min-height:3rem; font-size:0.8rem;">
        <div class="col-9">
            <p class="font-weight-bold employee-name mb-0"></p>
            <p class="text-muted employee-code mb-0"></p>
        </div>
        <div class="col-3 px-2" style="border-left: 1px solid #6c757d;">
            <p class="mb-1">D: <strong class="days"></strong></p>
            <p class="mb-1">H: <strong class="hours"></strong></p>
        </div>
    </div>
</template>

@* template work *@
<template id="timeinfo-item">
    <div class="border border-info text-center mx-0 mr-1 px-2 card bg-white" style="max-height:3rem; min-height:3rem; max-width:5rem; min-width:5rem;">
        @* Co the thay doi theo tin trang check in - out *@
        <p class="text-muted check-in mb-0"></p>
        <p class="text-muted check-out mb-0"></p>
    </div>
</template>

@section Scripts{
    <script>
        (() => {
            const dayOfMonthArray = @Html.Raw(ViewData["days"]);
            const timeInfoArray = @Html.Raw(ViewData["time-info"]);
            const dayTitleContainer = document.querySelector('#day-of-week');
            const personContainer = document.querySelector('#employees-container');
            const timeContainer = document.querySelector('#time-info-container');
            const quickFilter = document.querySelector('#quick-filter');

            quickFilter.onkeyup = quickFilterHandle;


            //renderDayOfWeekTitle(dayOfMonthArray, timeContainer);
            renderPersonAndTime(timeInfoArray, personContainer, timeContainer, dayOfMonthArray);



            // function
            function renderDayOfWeekTitle(data, container) {
                const DOW = data;
                const div = document.createElement('div');
                div.id = 'day-of-week';
                div.classList.add('d-flex');
                timeContainer.appendChild(div);
                if (Array.isArray(DOW)) {
                    DOW.forEach(e => {
                        const tmp = document.querySelector('#time-sheet-date-title').content.cloneNode(true);
                        tmp.querySelector('.time-sheet-date').innerHTML = `${e.Day} / ${e.Month}`;
                        tmp.querySelector('.date-name').innerHTML = `${e.DayName}`;
                        div.appendChild(tmp);
                    });
                }
                container.appendChild(div);
            }

            function renderPersonAndTime(data, personContainer, timeContainer, dayOfMonth) {
                timeContainer.innerHTML = '';
                personContainer.innerHTML = '';
                

                renderDayOfWeekTitle(dayOfMonthArray, timeContainer);


                renderPersonInfo(data, personContainer);
                renderTimeInfo(data, timeContainer, dayOfMonth);

            }

            function renderPersonInfo(data, personContainer) {
                personContainer.innerHTML = '';
                const tmp = document.querySelector('#employee-item');
                if (tmp) {
                    if (Array.isArray(data)) {
                        data.forEach(e => {
                            const cloneTmp = tmp.content.cloneNode(true);
                            cloneTmp.querySelector('.employee-name').innerHTML = e.FullName;
                            cloneTmp.querySelector('.employee-code').innerHTML = e.PersonnelId;
                            cloneTmp.querySelector('.days').innerHTML = e.Days;
                            cloneTmp.querySelector('.hours').innerHTML = e.Hours;
                            personContainer.appendChild(cloneTmp);
                        });
                    }
                }
            }

            function renderTimeInfo(data, timeContainer, dayOfMonthArray) {
                const tmp = document.querySelector('#timeinfo-item');
                if (tmp) {
                    if (Array.isArray(data)) {
                        data.forEach(e => {
                            const timeInfoRow = document.createElement("div");
                            timeInfoRow.classList.add("d-flex", "mt-1");
                            for (let i = 0; i < dayOfMonthArray.length; i++) {
                                const element = dayOfMonthArray[i];
                                const result = e.Checkin.filter(f => {
                                    const date = new Date(f.Date);
                                    return date.getDate() == element.Day && element.Month == date.getMonth() + 1
                                        && element.Year == date.getFullYear();
                                });
                                const tmpClone = tmp.content.cloneNode(true);

                                if (result.length != 0) {
                                    sortedResult = result.sort(function (a, b) {
                                        const hm1 = a.Hour.split(':');
                                        const hm2 = b.Hour.split(':');

                                        const hour1 = parseInt(hm1[0]);
                                        const minute1 = parseInt(hm1[1]);

                                        const hour2 = parseInt(hm2[0]);
                                        const minute2 = parseInt(hm2[1]);

                                        if (hour1 == hour2) {
                                            return minute1 - minute2;
                                        }
                                        return hour1 - hour2;
                                    });
                                    tmpClone.querySelector('.check-in').innerHTML = sortedResult[0].Hour;
                                    tmpClone.querySelector('.check-out').innerHTML = sortedResult.length == 1 ? '' : sortedResult[1].Hour;
                                    timeInfoRow.appendChild(tmpClone);
                                }
                                else {
                                    timeInfoRow.appendChild(tmpClone);
                                }
                            }
                            timeContainer.appendChild(timeInfoRow);
                        });
                    }
                }
            }

            function quickFilterHandle(e) {
                const keyWord = e.target.value;
                if (keyWord.trim()) {
                    const keyLower = keyWord.trim().toLowerCase();
                    const timeInfoFilter = timeInfoArray.filter(e => e.FullName.toLowerCase().includes(keyLower));
                    renderPersonAndTime(timeInfoFilter, personContainer, timeContainer, dayOfMonthArray);
                }
                else {
                    renderPersonAndTime(timeInfoArray, personContainer, timeContainer, dayOfMonthArray);
                }
            }
        })();
    </script>
}

