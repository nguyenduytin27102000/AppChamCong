@model IEnumerable<TimeKeeping.Models.Personnel>

@{
	ViewData["Title"] = "List of Personnel";
}

<form asp-action="Index" method="get">
	<div class="form-actions no-color">
		<div class="form-group row">
			<div class="col-2">
				<label class="form-label">Find by name:</label>
			</div>
			<div class="col-5">
				<input type="text" name="name" value="@ViewData["name"]" class="form-control" />
			</div>
		</div>
		<div class="form-group row">
			<div class="col-2">
				<label class="form-label">Find by office:</label>
			</div>
			<div class="col-5">
				<select asp-items="ViewBag.OfficeId" name="office" class="form-control">
					<option value=""></option>
				</select>
			</div>
		</div>
		<div class="form-group row">
			<div class="col-2">
				<label class="form-label">Find by position:</label>
			</div>
			<div class="col-5">
				<select asp-items="ViewBag.PositionId" name="position" class="form-control">
					<option value=""></option>
				</select>
			</div>
		</div>
		<div class="form-group row">
			<div class="col-2">
				<label class="form-label">Find by work area:</label>
			</div>
			<div class="col-5">
				<select asp-items="ViewBag.WorkingAreaId" name="workArea" class="form-control">
					<option value=""></option>
				</select>
			</div>
		</div>
		<input type="submit" value="Search" class="btn btn-outline-primary" />
		<a asp-action="Index">Back to Full List</a>
	</div>
</form>

<h1 class="text-center">List of Personnel</h1>

<p>
	<a class="btn btn-primary" asp-action="Create">Create A New Personnel</a>
</p>

<h5>@Model.Count() staffs</h5>

<table class="table">
	<thead class="bg-light">
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.FirstName)
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.LastName)</a>
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Sex)
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["DateOfBirthParm"]">@Html.DisplayNameFor(model => model.DateOfBirth)</a>
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Phone)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Email)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PersonnelAddress)
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["OfficeParm"]">@Html.DisplayNameFor(model => model.Office)</a>
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["PositionParm"]">@Html.DisplayNameFor(model => model.Position)</a>
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["workScheduleParm"]">@Html.DisplayNameFor(model => model.WorkScheduleId)</a>
			</th>
			<th>
				@Html.DisplayNameFor(model => model.WorkingAreaId)
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["ActiveParm"]">@Html.DisplayNameFor(model => model.Active)</a>
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.FirstName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.LastName)
				</td>
				<td>
					@*@Html.DisplayFor(modelItem => item.Sex)*@
					@{
						string displayGender;
						if (item.Sex == true)
						{
							displayGender = "Male";
						}
						else
						{
							displayGender = "Female";
						}
					}

					@displayGender
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.DateOfBirth)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Phone)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Email)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PersonnelAddress)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Office.OfficeName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Position.PositionName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.WorkSchedule.WorkScheduleName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.WorkingArea.WorkingAreaName)
				</td>
				<td>
					@*@Html.DisplayFor(modelItem => item.Active)*@
					@{
						string displayDeleteState;
						if (item.Active == true)
						{
							displayDeleteState = "Using";
						}
						else
						{
							displayDeleteState = "Don't use";
						}
					}

					@displayDeleteState
				</td>
				<td>
					<a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.PersonnelId">Edit</a>
					<a class="btn btn-info" asp-action="Details" asp-route-id="@item.PersonnelId">Details</a>
					@{
						if (item.Active == true)
						{
							<a class="btn btn-danger" onclick="deleteAlert()" asp-action="Delete" asp-route-id="@item.PersonnelId">Delete</a>
						}
						else
						{
							<a class="btn btn-success" onclick="restoreAlert()" asp-action="Restore" asp-route-id="@item.PersonnelId">Restore</a>
						}
					}
				</td>
			</tr>
		}
	</tbody>
</table>

<script>
	function deleteAlert() {
		alert("Delete successful!");
	}

	function restoreAlert() {
		alert("Restore successful!");
	}
</script>