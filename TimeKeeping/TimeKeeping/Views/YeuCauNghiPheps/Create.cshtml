@model TimeKeeping.ViewModels.TimeOffRequestModel

@{
    ViewData["Title"] = "Create Time Off Request";
}

<style>
    label {
        margin-bottom: 0;
    }
</style>

<h4 class="font-weight-bold">Create Time Off Request</h4>
<hr />
<section class="container-fluid">
    <div class="border-1">
        @if (ViewData["message"] != null)
        {
            <div class="alert alert-@ViewData["status"]" role="alert">
                @ViewData["message"]
            </div>
        }
        <form asp-action="Create" asp-controller="YeuCauNghiPheps" id="createRequestTimeoffForm"
              method="post" enctype="multipart/form-data">
            <input type="hidden" name="DateOffCount" id="count" value="0" />
            <div class="form-group row">
                <div class="col-sm-3 col-form-label">
                    <label asp-for="TieuDe" class="font-weight-bold"></label>
                    <br />
                    <small class="text-muted">Title</small>
                </div>
                <div class="col-sm-9">
                    <input asp-for="TieuDe" class="form-control" rules="required" />
                    <span class="text-danger form-message"></span>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-3 col-form-label">
                    <label asp-for="MaMauNghiPhep" class="font-weight-bold"></label>
                    <br />
                    <small class="text-muted">Select time off form</small>
                </div>
                <div class="col-sm-9">
                    <select asp-for="MaMauNghiPhep" class="form-control" asp-items="ViewBag.MaMauNghiPhep"></select>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-3 col-form-label">
                    <label asp-for="LyDoNghiPhep" class="font-weight-bold"></label>
                    <br />
                    <small class="text-muted">Your reason</small>
                </div>
                <div class="col-sm-9">
                    <input asp-for="LyDoNghiPhep" class="form-control" rules="required" />
                    <span class="text-danger form-message"></span>
                </div>
            </div>

            <div class="form-group form-check">
                <label class="form-check-label font-weight-bold">
                    <input id="cbx-ban-giao" class="form-check-input" asp-for="BanGiaoCongViec" /> @Html.DisplayNameFor(model => model.BanGiaoCongViec)
                </label>
            </div>

            <div class="form-group row">
                <div class="col-sm-3 col-form-label">
                    <label asp-for="CacCongViecBanGiao" class="font-weight-bold"></label>
                    <br />
                    <small class="text-muted">Overhand works detail</small>
                </div>
                <div class="col-sm-9">
                    <textarea asp-for="CacCongViecBanGiao" id="cv-ban-giao" class="form-control" readonly></textarea>
                    <br />
                    <span asp-validation-for="CacCongViecBanGiao" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row">
                <label asp-for="MaNguoiQuanLy" class="col-sm-3 col-form-label font-weight-bold"></label>
                <div class="col-sm-9">
                    <select asp-for="MaNguoiQuanLy" class="form-control" asp-items="ViewBag.MaNguoiQuanLy"></select>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-3 col-form-label">
                    <label asp-for="TaiLieuDinhKem" class="font-weight-bold"></label>
                    <br />
                    <small class="text-muted">You can upload a attachment</small>
                </div>
                <div class="col-sm-9">
                    <input asp-for="TaiLieuDinhKem" type="file" class="form-control" />
                    <br />
                    <span asp-validation-for="TaiLieuDinhKem" class="text-danger"></span>
                </div>
            </div>

            <p class="text-muted">Setting dayofff * (Maximum 5 days)</p>

            <div id="shifts" class="mb-3"></div>

            <button class="btn btn-block btn-outline-success d-none" id="insert-date-off">+ INSERT NEXT DAY</button>
            <button class="btn btn-block btn-outline-danger d-none" id="remove-date-off">- REMOVE A LAST DAY</button>

            <div class="row justify-content-center my-3">
                <div class="col-3">
                    <a asp-action="Create" class="btn btn-block btn-secondary">Reset</a>
                </div>
                <div class="col-3">
                    <input type="submit" class="btn btn-success btn-block" value="Send" />
                </div>
            </div>
        </form>
    </div>
</section>

@section Scripts {
    <script src="~/js/Validator.js"></script>
    <script>
        const validator = Validator('#createRequestTimeoffForm', '.form-group', '.form-message', 'invalid')
    </script>
    <script>
        const ckb_ban_giao = document.querySelector('#cbx-ban-giao');
        const cv_ban_gian = document.querySelector('#cv-ban-giao');
        const insertDateOffBtn = document.querySelector('#insert-date-off');
        const removeDateOffBtn = document.querySelector('#remove-date-off');
        const shiftsObjects = @Html.Raw(ViewData["Shifts"]);
        let shiftJson = '';
        let count = 0;
        ckb_ban_giao.onclick = (e) => {
            if (ckb_ban_giao.checked == true) {
                cv_ban_gian.readOnly = false;
            }
            else {
                cv_ban_gian.readOnly = true;
                cv_ban_gian.value = '';
            }
        }

        insertDateOffBtn.onclick = function (e) {
            e.preventDefault();
            if (count <= 4) {
                if (count == 4)
                    this.classList.add('d-none');
                RenderShifts();
                SaveCount();
                removeDateOffBtn.classList.remove('d-none');
            }
        }

        removeDateOffBtn.onclick = function (e) {
            e.preventDefault();
            insertDateOffBtn.classList.contains('d-none') ? insertDateOffBtn.classList.remove('d-none') : undefined;
            const dateoffCards = document.querySelectorAll('.date-off');
            dateoffCards[dateoffCards.length - 1].remove();
            count--;
            SaveCount();
            if (count == 1) removeDateOffBtn.classList.add('d-none');
        }

        function SaveCount() {
            document.querySelector('#count').value = count;
            validator.update();
        }

        (() => {
            RenderShifts();
            SaveCount();
            insertDateOffBtn.classList.remove('d-none');
        })();

        function RenderShifts() {
            const shiftsContainer = document.querySelector('#shifts');
            let temp = `
                    <div class="form-group row">
                        <div class="col-sm-3 col-form-label">
                            <label class="font-weight-bold">Day ${++count}</label>
                            <br />
                            <small class="text-muted">Day off</small>
                        </div>
                        <div class="col-sm-9">
                            <input name="Date${count}" type="date" class="form-control" rules="required|uniqueDate" />
                            <span class="text-danger form-message"></span>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-3 point"></div>
                        <div class="col-sm-9">
                            {{body}}
                        </div>
                        <div class="col-sm-3 point"></div>
                        <div class="col-sm-9">
                            <span class="form-message"></span>
                        </div>
                    </div>
                `;
            let html = '';
            shiftsObjects.map((e, index) => {
                return html += `
                        <div class="form-check form-check-inline bg-white p-2">
                            <input class="form-check-input" type="checkbox" id="shift-${count}-${e.Id}"
                                name="DateShitfId${count}" value="${e.Id}" ${index == 0 ? 'rules="boxChecked"' : ''} >
                            <label class="form-check-label" for="shift-${count}-${e.Id}" >${e.Start} - ${e.End}</label>
                         </div>
                `;
            });
            const cardNode = document.createElement("div");
            cardNode.classList.add("card", "date-off", "p-3", "mb-3", "bg-light");
            cardNode.innerHTML = temp.replace("{{body}}", html);
            shiftsContainer.appendChild(cardNode);
        }
    </script>
}
